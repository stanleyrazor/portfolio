{
  "hash": "43d042cd1bc62639844c32ada9d6769f",
  "result": {
    "markdown": "---\ntitle: \"A comparison of covariance matrix estimation methods for tangency portfolios.\"\nauthor: \"Stanley Sayianka\"\nformat:\n  html:\n    grid:\n      margin-width: 400px\nreference-location: margin\ncitation-location: margin\n\ndate: \"2023-03-03\"\ncategories: [Investments, Quant-finance]\nimage: \"covmat-img.png\"\n---\n\n::: {.cell}\n\n:::\n\n\nThis article investigates the problem of covariance matrix estimation for tangency portfolios using data from the Nairobi Securities Exchange (NSE) Specifically, I compare several methods of covariance matrix estimation and evaluate their performance in constructing tangency portfolios. The results provide insights into the most effective methods for estimating the covariance matrix in the context of the NSE, which can be valuable for portfolio managers and investors seeking to optimize their investment portfolios in the NSE.\n\n# Introduction\n\nMost investors base their investment decisions on two metrics: the mean(return), and variance(risk)[^1], where some choose to invest in portfolios giving the highest return for a given level of risk, while others invest in portfolios giving the lowest risk, for a given level of return.\n\n[^1]: The use of variance and volatility as a measure of portfolio risk, has a long history. For instance, see Fisher (1906) and Tobin (1958)\n\nMarkowitz (1952), was the first to formalize portfolio risk and asset selection, in what came to be known as *Markowitz Portfolio Theory (MPT)*. MPT states that the portfolio's return is given by the weighted average of the expected returns for the individual assets in the portfolio and the portfolio's risk is equal to the variance of the portfolio returns which is a function of the variances and covariances between securities and their weights in the portfolio.\n\nThis is shown below:\n\n$$\\mu_p = \\sum_{i=1}^n w_i\\mu_i$$ $$\\sigma^2_p = \\sum_{i=1}^n w_iw_j*\\sigma_{ij}$$ Where:\n\n$\\mu_p, \\sigma^2_p$: The portfolio's expected return and variance respectively.\n\n$n$: The number of assets in the portfolio.\n\n$\\mu_i$: the expected returns for asset $i$.\n\n$w_i, w_j$: The weight invested in assets $i$ and $j$ respectively.\n\n$\\sigma^2_{ij}$: The covariance between asset $i$ and $j$. If $i = j$, then $\\sigma^2_{ij}$ is the variance of the $i^{th}$ asset in the portfolio.\n\n## The efficient frontier and efficient portfolios\n\nThe efficient frontier is a concept used in modern portfolio theory that helps investors to identify the optimal portfolio that maximizes returns for a given level of risk. The theory assumes that investors are risk-averse and will choose the portfolio with the highest expected return for a given level of risk. It is usually represented as a graph that plots the expected return and standard deviation[^2] of all possible portfolios that can be constructed from a set of assets.\n\n[^2]: as a measure of risk\n\nThe portfolios on the efficient frontier are considered to be *efficient* because they provide the highest possible expected return for a given level of risk. Thus, investors can choose any portfolio on the efficient frontier that suits their level of risk tolerance. An important aspect to note from the efficient frontier is: investors can only increase their expected return by taking on more risk.\n\n## Tangency portfolio\n\nA tangency portfolio, is a portfolio that maximizes the risk-adjusted return for a given level of risk aversion. Specifically, a tangency portfolio lies on the efficient frontier, and it is tangent to the capital market line^[Simple a straight line representing the risk/reward profiles of different combinations of a risky portfolio with a riskless asset]. It is widely used in portfolio management to construct investment portfolios that offer the highest expected return for a given level of risk or the lowest level of risk for a given expected return.\n\nDespite the emergence of alternative portfolio construction techniques, such as risk parity, tangency portfolios remain relevant in investment management due to their ability to provide an optimal balance between risk and return. They are a key component of modern portfolio theory and provide a useful reference point for evaluating portfolio performance. They are constructed based on the efficient frontier - as such, they represent the most efficient way to achieve a particular level of expected return, making them an important tool for portfolio optimization.\n\nThe optimization problem for the tangency portfolio can be expressed follows:\n\nSuppose we have a universe of $n$ assets with returns $\\mathbf{\\mu}$ and covariance matrix $\\mathbf{\\Sigma}$. We want to construct a portfolio with weights $\\mathbf{w}$ that maximizes the Sharpe ratio subject to the constraint that all weights are non-negative, and sum to one:\n\n$$max_w \\hspace{2 mm} h(w) = \\frac{\\mu^Tw - r_f}{w^T \\Sigma w}$$\n$$\\text{subject to} \\quad \\mathbf{w} \\geq \\mathbf{0}, \\hspace{2 mm} \\sum_{i=1}^n w_i = 1$$\nThe quantity $h(w)$ is precisely the Sharpe ratio.\n\nSolving for $w$, gives:\n\n$$\\mathbf{w} = \\frac{\\mathbf{\\Sigma}^{-1} (\\mathbf{\\mu} - r_f \\mathbf{1})}{\\mathbf{\\mathbf{1^T}  \\Sigma}^{-1}(\\mathbf{\\mu} - r_f \\mathbf{1})} $$\n\nFrom the solution above, the covariance matrix and mean vector are crucial in the solution for the tangency portfolio. The mean vector represents the expected returns for each asset in the portfolio, while the covariance matrix represents the co-movements between the returns of each asset in the portfolio.\n\nThe optimal portfolio is found by balancing the expected returns and risks of the individual assets in the portfolio, which is done using the mean vector and covariance matrix. In the next section, we explore several ways of estimating the expected returns and covariance matrix for the assets in the portfolio\n\nIn the next section, we review covariance matrix estimation methods present in literature, giving their formulations, and using them in computing optimal allocations to the investment universe. We briefly begin with the sample covariance matrix, and proceed to alternative covariance matrix estimation methods.\n\n## The sample covariance matrix (SAMPLE)\n\nThe sample covariance matrix is among the earliest and commonly used estimator, especially because it arises as the maximum likelihood solution under normality. It is calculated from the historical returns of the assets in the portfolio, with the assumption that the historical returns of the assets are representative of their future returns. This assumption may be violated, especially in dynamic markets.\n\nThe sample location estimate for a portfolio of $n$ observations and $p$ assets is given by:\n\n$$ E(r_p) = \\sum_{i=1}^{n} w_i E(r_i)$$\nThe sample covariance matrix is given by:\n  \n\\begin{equation}\n\\hat{\\Sigma} = \\frac{1}{n-1} \\sum_{i=1}^{n} (\\mathbf{x_i} - \\boldsymbol{\\bar{x}})(\\mathbf{x_i} - \\boldsymbol{\\bar{x}})^T,\n\\end{equation}\n\nwhere:\n\n$E(r_p)$ is the expected return of the portfolio\n\n$E(r_i)$ is the expected return of the $i$th asset\n\n$\\mathbf{x_i}$ is the $i$-th observation vector,\n\n$\\boldsymbol{\\bar{x}}$ is the sample mean vector, and the superscript $T$ denotes the matrix transpose operation. \n\nNote that $\\hat{\\Sigma}$ is a symmetric $p \\times p$ matrix.\n\nOne of the main drawbacks of the sample covariance matrix is that it is sensitive to outliers. Additionally, if the number of assets in the portfolio is large, singularity issues may emerge when computing the sample covariance matrix.\n\nSince, the sample covariance matrix is sensitive to outlying observations, there is need to examine other *'robust'* approaches to estimating the covariance matrix of historical stock returns. The robust methods provide alternative approaches to classical methods for location and scale estimates, as they are not affected by slight departures from model assumptions. \n\nIn the next section, we investigate some of the robust covariance estimators:\n\n## 1. Minimum Covariance Determinant Estimator (MCD)\n\nThe MCD estimator is based on the concept of finding the subset of data points: $h(>N/2)$ whose classical covariance matrix has the lowest possible determinant, which is a measure of the spread of the data. \n\nWhen using the MCD estimator, the location estimate of a portfolio is given by the arithmetic mean of the asset returns in the robust subset, as follows:\n\n$$\\bar{r}_{MCD} = \\frac{1}{n_{robust}} \\sum_{i=1}^{n_{robust}} r_i$$\nWhere:\n\n$\\bar{r}_{MCD}$ is the location estimate using the MCD estimator,\n\n$n_{robust}$ is the number of assets in the robust subset, and\n\n$r_i$ is the return of the $i$th asset in the robust subset.\n\nThe MCD estimator for the covariance matrix is computed as follows:\n\n\\begin{equation}\n\\hat{\\Sigma}_{MCD} = c_{p,n} \\cdot \\text{MAD}(\\mathbf{X})^{-2} \\cdot \\sum_{i=1}^{h} w_i (\\mathbf{x_i} - \\boldsymbol{\\bar{x}})(\\mathbf{x_i} - \\boldsymbol{\\bar{x}})^T,\n\\end{equation}\n\nwhere:\n\n$\\mathbf{X}$ is a $n \\times p$ matrix of observations,\n\n$\\boldsymbol{\\bar{x}}$ is the sample mean vector,\n\n$\\text{MAD}(\\mathbf{X})$ is the Median Absolute Deviation of the observations,\n\n$h$ is the number of non-outlier observations,\n\n$w_i$ are weights assigned to each non-outlier observation, and\n\n$c_{p,n}$ is a constant that depends on the dimension of the data and the number of observations.\n\nOne of the main strengths of the MCD estimator is its ability to handle both symmetric and asymmetric outliers in the data, making it robust. It is also computationally efficient and can be used with high dimensional datasets, and portfolios with a large number of assets.\n\nA limitation of the MCD estimator is that it assumes that the data points are multivariate normal, which may not always hold true in practice. The MCD estimator may also produce unreliable estimates of the covariance matrix when the proportion of outliers in the data is very high.\n\n## 2. Minimum Volume Ellipsoid Estimator (MVE)\n\nThe MVE is a multivariate location and scale estimator which uses a subset of the data in its computation. It is based on the concept of fitting an ellipsoid to the data points that minimizes its volume, while ensuring that it contains a specified proportion^[This specified proportion is based on user-supplied quantiles] of the data points. It can be thought of as estimating the mean and covariance of the *'good part'* of the data.\n\nWhen using the MVE estimator, the location estimate of a portfolio is given by the arithmetic mean of the asset returns in the ellipsoid that encloses the robust subset, as follows:\n\n$$\\bar{r}_{MVE} = \\frac{1}{n_{robust}} \\sum_{i=1}^{n_{robust}} r_i$$\n\nwhere:\n\n$\\bar{r}_{MVE}$ is the location estimate using the MVE estimator,\n\n$n_{robust}$ is the number of assets in the robust subset, and \n\n$r_i$ is the return of the $i$th asset in the robust subset.\n\nThe MVE estimator for the covariance matrix is computed as follows:\n\n\\begin{equation}\n\\hat{\\Sigma}_{MVE} = \\frac{n}{m} \\cdot \\text{cov}_{\\text{MCD}}(\\mathbf{X}),\n\\end{equation}\n\nwhere:\n\n$\\mathbf{X}$ is a $n \\times p$ matrix of observations,\n\n$\\text{cov}_{\\text{MCD}}(\\mathbf{X})$ is the covariance matrix computed using the MCD estimator, and \n\n$m$ is the number of observations used to compute the MCD estimator.\n\nOther than being robust to outliers, the MVE provides a more accurate estimate of the covariance matrix when the distribution of the asset returns is non-normal. In such cases, the MVE estimator can capture the non-linear relationships between the assets and produce more accurate estimates of the covariance matrix.\n\nHowever, the MVE estimator can be computationally expensive to calculate, especially when dealing with portfolios with a large number of assets and the assumption that data points are elliptically distributed may not always hold true in some cases.\n\n## 3. Orthogonalized Gnanadesikan-Kettenring Estimator (OGK)\n\nThis method is based on the concept of orthogonalizing the data matrix to remove any correlations between the variables and then estimating the covariance matrix from the resulting matrix.\n\nThe OGK estimate for the robust location measure is defined as:\n\n$$\\mu(X) = \\frac{\\sum_i w_ix_i}{\\sum_i w_i}$$\n\nWhere,\n\n$w_i$ are the robustness weights compute as:\n\n$$w_i := w_{c1}\\frac{(x_i - med(X))}{MAD(X)}$$\n\nThe OGK estimator for the covariance matrix can be computed as follows:\n\n\\begin{equation}\n\\hat{\\Sigma}_{OGK} = \\frac{1}{n} \\cdot \\sum_{i=1}^{n} \\lambda_i(\\mathbf{S}) \\cdot \\mathbf{V_i} \\cdot \\mathbf{V_i}^T,\n\\end{equation}\n\nwhere \n\n$\\mathbf{S}$: is the sample covariance matrix,\n\n$\\lambda_i(\\mathbf{S})$ and $\\mathbf{V_i}$ are the eigenvalues and eigenvectors of $\\mathbf{S}$, respectively, and $n$ is the number of observations.\n\nOne of the main strengths of the OGK estimator is its ability to handle datasets with high levels of multicollinearity^[High correlations between the variables in the data], which can cause instability in the estimates of the covariance matrix. The OGK estimator reduces this instability by orthogonalizing the data matrix\n\nThe OGK estimator also produces estimates of the covariance matrix that are more accurate than those obtained using the sample covariance matrix when the distribution of the asset returns is non-normal.\n\nSome limitations to using the OGK estimator include: it can be computationally expensive to calculate, especially when dealing with portfolios with a large number of assets. The OGK estimator may also produce unreliable estimates of the covariance matrix when the proportion of outliers in the data is very high.\n\n## 4. Nearest-Neighbour Variance Estimator (NNV)\n\nThe NNV estimator is based on the concept of using the k-nearest neighbors of each data point to estimate its variance, which is then used to estimate the covariance matrix.\n\nThe location estimate is given by the arithmetic mean of the asset returns in the dataset. The formula for the location estimate using the NNV estimator is:\n\n$$\\bar{r}_{NNV} = \\frac{1}{n} \\sum_{i=1}^{n} r_i$$\n\nwhere:\n\n$\\bar{r}_{NNV}$ is the location estimate using the NNV estimator,\n\n$n$ is the number of assets in the portfolio, \n\nand $r_i$ is the return of the $i^{th}$ asset in the portfolio.\n\nThe NNV estimator for the covariance matrix is computed as follows:\n\n\\begin{equation}\n\\hat{\\Sigma}_{NNV} = \\frac{2}{n(n-1)h^2} \\sum_{i=1}^{n} \\sum_{j=1}^{n} w\\left(\\frac{|\\mathbf{x_i} - \\mathbf{x_j}|}{h}\\right) (\\mathbf{x_i} - \\mathbf{\\bar{x}})(\\mathbf{x_j} - \\mathbf{\\bar{x}})^T,\n\\end{equation}\n\nwhere \n\n$\\mathbf{x_i}$ and $\\mathbf{x_j}$ are the $i^{th}$ and $j^{th}$ observations, respectively,\n\n$\\mathbf{\\bar{x}}$ is the sample mean,\n\n$h$ is a smoothing parameter, and $w(\\cdot)$ is a weighting function^[A common choice for $w(\\cdot)$ is the Epanechnikov kernel.]. \n\nOne of the main strengths of the NNV estimator is its ability to handle datasets with a large number of assets, and thus, it can produce estimates of the covariance matrix that are less affected by the curse of dimensionality than other methods.\n\nLimitations to using the NNV estimator include: it assumes that the data points are independent and identically distributed, which may not always hold true in practice. Additionally, the NNV estimator may produce unreliable estimates of the covariance matrix when the dataset contains outliers or when the nearest neighbors parameter $k$ is chosen incorrectly.\n\n## 5. Shrinkage Estimator (SHRINK)\n\nThe Shrinkage estimator is based on the concept of shrinking the sample covariance matrix towards a target matrix such as the diagonal matrix or a structured matrix, which can improve the accuracy of the estimated covariance matrix.\n\nThe Shrinkage Estimator of the location parameter is given by the arithmetic mean of the asset returns.\n\nThe Shrinkage Estimator for the covariance matrix is computed as follows:\n\n\\begin{equation}\n\\hat{\\Sigma}_{Shrink} = \\alpha \\cdot \\hat{\\Sigma}_{D} + (1-\\alpha) \\cdot \\hat{\\Sigma}_{S},\n\\end{equation}\n\nwhere:\n\n$\\hat{\\Sigma}_{D}$ is the diagonal matrix of the sample variances,\n\n$\\hat{\\Sigma}_{S}$ is the target matrix, and $\\alpha$ is the shrinkage intensity parameter that determines the degree of shrinkage towards the target matrix.\n\nA common choice for the target matrix is the Ledoit-Wolf estimator, which is based on the assumption that the true covariance matrix can be expressed as a linear combination of a diagonal matrix and a low-rank matrix. The Ledoit-Wolf estimator is computed as follows:\n\n\\begin{equation}\n\\hat{\\Sigma}_{LW} = \\gamma \\cdot \\hat{\\Sigma}_{D} + (1-\\gamma) \\cdot \\hat{\\Sigma}_{L},\n\\end{equation}\n\nwhere:\n\n$\\hat{\\Sigma}_{D}$ is the diagonal matrix of the sample variances,\n\n$\\hat{\\Sigma}_{L}$ is the low-rank matrix that minimizes the Frobenius norm distance to the sample covariance matrix, and\n\n$\\gamma$ is a parameter that determines the degree of shrinkage towards the diagonal matrix.\n\nThe main strengths of the Shrinkage estimator is that it produces reliable estimates of the covariance matrix than the sample covariance matrix when the number of observations or assets is small, as well as when the number of assets is large, and thus, it is less affected by the curse of dimensionality than other methods.\n\nHowever, there are also some limitations to using the Shrinkage estimator. The accuracy of the estimated covariance matrix depends on the choice of the target matrix. It is also important to note that, the Shrinkage estimator may produce unreliable estimates of the covariance matrix when the dataset contains outliers or when the amount of shrinkage is too large.\n\n## 6. Bagging Estimator (BAGGED)\n\nThe bagged estimator is based on the concept of bootstrapping, which involves creating multiple samples of the original dataset and using these samples to estimate the covariance matrix.\n\nThe Bagging Estimator for the location parameter is then given by the average of the sample means:\n \n$$\n\\boldsymbol{\\tilde{r}} = \\frac{1}{B} \\sum_{b=1}^B \\boldsymbol{\\bar{r}}_b\n$$\n\nwhere \n\n$\\boldsymbol{\\bar{r}}_b$ is the sample mean of the $b$th bootstrap sample, and\n\n$B$ is the number of bootstrap samples.\n\nThe Bagging Estimator for the covariance matrix is computed as follows:\n\n\\begin{equation}\n\\hat{\\Sigma}_{Bagging} = \\frac{1}{B} \\sum_{b=1}^{B} \\hat{\\Sigma}_{b},\n\\end{equation}\n\nwhere $\\hat{\\Sigma}_{b}$ is the sample covariance matrix computed from the $b^{th}$ bootstrap sample, and $B$ is the number of bootstrap samples used.\n\nTo generate each bootstrap sample, we randomly sample $n$ observations with replacement from the original data. Then, we compute the sample covariance matrix from the bootstrap sample.\n\nAn advantage of the bagged estimator is: that it can handle datasets with non-normal distributions or with a high proportion of outliers. By creating multiple samples of the dataset, it can reduce the impact of extreme values on the estimated covariance matrix.\n\nHowever, the accuracy of the estimated covariance matrix depends on the number of bootstrap samples ($B$) and the Bagged estimator may also produce unreliable estimates of the covariance matrix when the dataset contains highly correlated assets.\n\n## 7. Multivariate Student's t estimator (COV-T)\n\nThe Multivariate Student's t estimator is a technique used to estimate the covariance matrix in portfolio optimization based on the assumption that the asset returns follow a multivariate Student's t distribution, which can better capture the presence of outliers and heavy tails in the data compared to the normal distribution.\n\nThe Multivariate Student's t Estimator for the location parameter is given by:\n\n$$\n\\boldsymbol{\\tilde{r}} = \\frac{\\sum_{i=1}^n w_i \\boldsymbol{r}_i}{\\sum_{i=1}^n w_i}\n$$\n\nwhere:\n\n$\\boldsymbol{r}_i$ is the $i^{th}$ asset return vector, and\n\n$w_i$ is the weight assigned to the $i^{th}$ asset, which is determined by the Mahalanobis distance of the $i^{th}$ return vector from the empirical median of the returns, and the degrees of freedom parameter $\\nu$ of the Student's t distribution.\n\nThe Multivariate Student's t estimator for the covariance matrix is computed as follows:\n\n\\begin{equation}\n\\hat{\\Sigma}_{t} = \\frac{\\kappa}{\\kappa-2} \\cdot \\frac{\\sum_{i=1}^{n}(X_i-\\bar{X})(X_i-\\bar{X})^T}{n},\n\\end{equation}\n\nwhere:\n\n$X_i$ is the $i^{th}$ observation in the data,\n\n$\\bar{X}$ is the sample mean,\n\n$n$ is the sample size, and \n\n$\\kappa$ is a parameter that controls the degrees of freedom of the Student's t-distribution. \n\nThe main strength of the Multivariate Student's t estimator is that it can produce more reliable estimates of the covariance matrix than other methods when the dataset contains extreme values or when the returns are not normally distributed.\n\nA key limitation to this method is that it assumes that the asset returns follow a multivariate Student's t distribution, which may not always hold true in practice. Additionally, the Multivariate Student's t estimator may produce unreliable estimates of the covariance matrix when the dataset contains highly correlated assets.\n\n## 8. Adaptive Re-weighted estimator (ARW)\n\nThe Adaptive Re-weighted estimator is a technique based on the idea of iteratively re-weighting the observations based on their Mahalanobis distances from the current estimate of the mean and covariance matrix, which can improve the accuracy of the estimated covariance matrix. It is designed to be robust to outliers and heavy-tailed data.\n\n$$\\boldsymbol{\\tilde{r}} = \\boldsymbol{m}_{AR}^{(K)} = \\boldsymbol{m}_{AR}^{(0)} + \\sum_{k=1}^K \\boldsymbol{\\epsilon}^{(k)} \\boldsymbol{W}^{(k)}$$\n\nwhere:\n\n$\\boldsymbol{m}_{AR}^{(0)}$ is an initial estimate of the location parameter,\n\n$\\boldsymbol{\\epsilon}^{(k)}$ is the residual error of the linear regression of the asset returns on the estimate of the location parameter at iteration $k-1$, and\n\n$\\boldsymbol{W}^{(k)}$ is the weight matrix assigned to each asset at iteration $k$, which is determined by the Mahalanobis distance of the return vector from the estimate of the location parameter at iteration $k-1$, and a tuning constant $\\alpha_k$ that scales the distance threshold.\n\nThe re-weighted estimator for the covariance matrix is given by:\n\n\\begin{equation}\n\\hat{\\Sigma}_{ARW} = \\frac{1}{n} \\sum_{i=1}^{n} w_i (X_i - \\bar{X})(X_i - \\bar{X})^T,\n\\end{equation}\n\nwhere:\n\n$X_i$ is the $i^{th}$ observation in the data,\n\n$\\bar{X}$ is the sample mean,\n\n$n$ is the sample size, and $w_i$ is the weight assigned to the $i^{th}$ observation.\n\nThe weights are computed iteratively using the following update rule:\n\n\\begin{equation}\nw_i^{(k+1)} = \\frac{1}{\\sqrt{(X_i - \\bar{X})^T \\hat{\\Sigma}_{ARW}^{(k)-1} (X_i - \\bar{X})}},\n\\end{equation}\n\nwhere $\\hat{\\Sigma}_{ARW}^{(k)}$ is the estimate of the covariance matrix at iteration $k$. The iterations continue until the weights converge to a stable value.\n\nThe main advantage of this method is that it can produce estimates of the covariance matrix that are robust to model misspecification, such as when the asset returns do not follow a multivariate normal distribution.\n\nSome limitations to using the Adaptive Re-weighted estimator include: the accuracy of the estimated covariance matrix depends on the choice of the re-weighting function. The Adaptive Re-weighted estimator may also produce unreliable estimates of the covariance matrix when the dataset contains highly correlated assets.\n\n---\n\n# Data\n\n\n::: {.cell .column-margin}\n::: {.cell-output-display}\n![Returns correlation plot. The data do not exhibit high levels of correlation.](index_files/figure-html/fig-margin-1.png){#fig-margin width=672}\n:::\n:::\n\n\nThe data used for this study are the constituents of the NSE 20 Share Index (NSE 20) from the period 2015-01-01 to 2022-12-31, a total of 8 years. The stocks are listed below:\n\n\n::: {.cell}\n::: {.cell-output-display}\n|Company Name                                 |Ticker |Industry                |\n|:--------------------------------------------|:------|:-----------------------|\n|Absa Bank Kenya PLC                          |ABSA   |Banking                 |\n|Diamond Trust Bank Kenya Ltd Ord 4.00        |DTK    |Banking                 |\n|Equity Group Holdings Plc Ord 0.50           |EQTY   |Banking                 |\n|KCB Group Plc Ord 1.00                       |KCB    |Banking                 |\n|NIC Group Plc Ord 5.00                       |NCBA   |Banking                 |\n|Stanbic Holdings Plc ord.5.00                |SBIC   |Banking                 |\n|Standard Chartered Bank Kenya Ltd Ord 5.00   |SCBK   |Banking                 |\n|The Co-operative Bank of Kenya Ltd Ord 1.00  |COOP   |Banking                 |\n|Nation Media Group Ltd Ord. 2.50             |NMG    |Commercial and Services |\n|WPP Scangroup Plc Ord 1.00                   |SCAN   |Commercial and Services |\n|Bamburi Cement Ltd Ord 5.00                  |BAMB   |Construction and Allied |\n|KenGen Co. Plc Ord. 2.50                     |KEGN   |Energy and Petroleum    |\n|Kenya Power & Lighting  Co Ltd Ord 2.50      |KPLC   |Energy and Petroleum    |\n|Britam Holdings Plc Ord 0.10                 |BRIT   |Insurance               |\n|Kenya Re Insurance Corporation Ltd Ord 2.50  |KNRE   |Insurance               |\n|Centum Investment Co Plc Ord 0.50            |CTUM   |Investment              |\n|Nairobi Securities Exchange Plc Ord 4.00     |NSE    |Investment Services     |\n|British American Tobacco Kenya Plc Ord 10.00 |BAT    |Manufacturing & Allied  |\n|East African Breweries Ltd Ord 2.00          |EABL   |Manufacturing & Allied  |\n|Safaricom Plc Ord 0.05                       |SCOM   |Telecommunications      |\n:::\n:::\n\n\n# Portfolio construction\n\nThe portfolio constrcuted has the Long-Only constraint and is re-balanced yearly, using a rolling walk-forward analysis, with a rolling optimization period of four years, and a validation period of one year as shown below^[The portfolio is optimized using data from the optimization period, and the weights obtained are used in the validation period.]:\n\n\n::: {.cell}\n::: {.cell-output-display}\n|Optimization Period | Validation period|\n|:-------------------|-----------------:|\n|2015::2018          |              2019|\n|2016::2019          |              2020|\n|2017::2020          |              2021|\n|2018::2021          |              2022|\n:::\n:::\n\n\n\nFor the portfolio construction, the hyper-parameters are chosen as follows:\n\n- For the Multivariate Student's t estimator, the degree of freedom ($\\nu$) is the only hyper parameter, and it is obtained by first fitting the distribution on the optimization data, and then obtaining the fitted degree of freedom, to use in the portfolio validation phase.\n\n- For the Bagged estimator, the number of bootstrap samples ($B$) used, was fixed to 250 as informed by a pre-analysis, where several values of $B$ were tested ranging from 100 to 500, and the results indicated that the estimates from the bagged estimator do not vary as much with different values of $B$.\n\n- For the MCD estimator, the hyper-parameter $\\alpha$ was fixed to the default value of 0.5 as indicated by a pre-analysis.\n\n- For the Shrink estimator, the mixing weights $\\lambda$ are computed analytically and do not have to be user supplied.\n\n- The NNV estimator will not be used in the analysis, due to its instability, and the computation time it takes.\n\n- For the ARW estimator, a pre-analysis shows that fixing the value of the hyper-parameter $\\alpha$ to 0.025 (the default) is sufficient.\n\n## Benchmarks\n\nThe portfolio constructed using the sample covariance matrix is used as the benchmark against the other estimators.\n\n# Results\n\nThe portfolio cumulative returns chart is shown below:\n\n\n::: {.cell}\n::: {.cell-output-display}\n![The cumulative returns plot assuming an initial investment capital of 10,000 USD. The portfolio returns of the various estimators are benchmarked against the EQW: Equally weighted portfolio over the validation phase. The best portfolio in terms of risk adjusted returns (sharpe ratio) is the adaptively reweighted estimator portfolio.](index_files/figure-html/unnamed-chunk-5-1.png){width=960}\n:::\n:::\n\n\nThe benchmarking statistics against the sample covariance matrix estimator are shown below:\n\n\n::: {.cell}\n::: {.cell-output-display}\n`````{=html}\n<table class=\" lightable-paper\" style='font-family: \"Arial Narrow\", arial, helvetica, sans-serif; width: auto !important; '>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\">  </th>\n   <th style=\"text-align:right;\"> MCD </th>\n   <th style=\"text-align:right;\"> OGK </th>\n   <th style=\"text-align:right;\"> MVE </th>\n   <th style=\"text-align:right;\"> SHRINK </th>\n   <th style=\"text-align:right;\"> BAGGED </th>\n   <th style=\"text-align:right;\"> COV.T </th>\n   <th style=\"text-align:right;\"> ARW </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> Alpha </td>\n   <td style=\"text-align:right;\"> -0.0008 </td>\n   <td style=\"text-align:right;\"> 0.0010 </td>\n   <td style=\"text-align:right;\"> -0.0006 </td>\n   <td style=\"text-align:right;\"> 0.0000 </td>\n   <td style=\"text-align:right;\"> 0.0000 </td>\n   <td style=\"text-align:right;\"> 0.0005 </td>\n   <td style=\"text-align:right;\"> 0.0012 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Beta </td>\n   <td style=\"text-align:right;\"> 0.8593 </td>\n   <td style=\"text-align:right;\"> 0.6429 </td>\n   <td style=\"text-align:right;\"> 0.9140 </td>\n   <td style=\"text-align:right;\"> 0.9720 </td>\n   <td style=\"text-align:right;\"> 1.0011 </td>\n   <td style=\"text-align:right;\"> 0.8944 </td>\n   <td style=\"text-align:right;\"> 0.8973 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Beta+ </td>\n   <td style=\"text-align:right;\"> 0.8639 </td>\n   <td style=\"text-align:right;\"> 0.7750 </td>\n   <td style=\"text-align:right;\"> 0.9073 </td>\n   <td style=\"text-align:right;\"> 0.9817 </td>\n   <td style=\"text-align:right;\"> 1.0010 </td>\n   <td style=\"text-align:right;\"> 0.8633 </td>\n   <td style=\"text-align:right;\"> 0.8871 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Beta- </td>\n   <td style=\"text-align:right;\"> 0.9187 </td>\n   <td style=\"text-align:right;\"> 0.7975 </td>\n   <td style=\"text-align:right;\"> 0.9543 </td>\n   <td style=\"text-align:right;\"> 0.9800 </td>\n   <td style=\"text-align:right;\"> 1.0004 </td>\n   <td style=\"text-align:right;\"> 0.9373 </td>\n   <td style=\"text-align:right;\"> 0.9323 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> R-squared </td>\n   <td style=\"text-align:right;\"> 0.9371 </td>\n   <td style=\"text-align:right;\"> 0.4268 </td>\n   <td style=\"text-align:right;\"> 0.9712 </td>\n   <td style=\"text-align:right;\"> 0.9971 </td>\n   <td style=\"text-align:right;\"> 1.0000 </td>\n   <td style=\"text-align:right;\"> 0.9147 </td>\n   <td style=\"text-align:right;\"> 0.8635 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Annualized Alpha </td>\n   <td style=\"text-align:right;\"> -0.0424 </td>\n   <td style=\"text-align:right;\"> 0.0559 </td>\n   <td style=\"text-align:right;\"> -0.0297 </td>\n   <td style=\"text-align:right;\"> 0.0001 </td>\n   <td style=\"text-align:right;\"> 0.0001 </td>\n   <td style=\"text-align:right;\"> 0.0256 </td>\n   <td style=\"text-align:right;\"> 0.0657 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Correlation </td>\n   <td style=\"text-align:right;\"> 0.9680 </td>\n   <td style=\"text-align:right;\"> 0.6533 </td>\n   <td style=\"text-align:right;\"> 0.9855 </td>\n   <td style=\"text-align:right;\"> 0.9986 </td>\n   <td style=\"text-align:right;\"> 1.0000 </td>\n   <td style=\"text-align:right;\"> 0.9564 </td>\n   <td style=\"text-align:right;\"> 0.9292 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Correlation p-value </td>\n   <td style=\"text-align:right;\"> 0.0000 </td>\n   <td style=\"text-align:right;\"> 0.0000 </td>\n   <td style=\"text-align:right;\"> 0.0000 </td>\n   <td style=\"text-align:right;\"> 0.0000 </td>\n   <td style=\"text-align:right;\"> 0.0000 </td>\n   <td style=\"text-align:right;\"> 0.0000 </td>\n   <td style=\"text-align:right;\"> 0.0000 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Tracking Error </td>\n   <td style=\"text-align:right;\"> 0.0575 </td>\n   <td style=\"text-align:right;\"> 0.1804 </td>\n   <td style=\"text-align:right;\"> 0.0392 </td>\n   <td style=\"text-align:right;\"> 0.0129 </td>\n   <td style=\"text-align:right;\"> 0.0008 </td>\n   <td style=\"text-align:right;\"> 0.0639 </td>\n   <td style=\"text-align:right;\"> 0.0810 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Active Premium </td>\n   <td style=\"text-align:right;\"> -0.0503 </td>\n   <td style=\"text-align:right;\"> 0.0302 </td>\n   <td style=\"text-align:right;\"> -0.0346 </td>\n   <td style=\"text-align:right;\"> -0.0008 </td>\n   <td style=\"text-align:right;\"> 0.0002 </td>\n   <td style=\"text-align:right;\"> 0.0214 </td>\n   <td style=\"text-align:right;\"> 0.0622 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Information Ratio </td>\n   <td style=\"text-align:right;\"> -0.8751 </td>\n   <td style=\"text-align:right;\"> 0.1675 </td>\n   <td style=\"text-align:right;\"> -0.8828 </td>\n   <td style=\"text-align:right;\"> -0.0653 </td>\n   <td style=\"text-align:right;\"> 0.2101 </td>\n   <td style=\"text-align:right;\"> 0.3348 </td>\n   <td style=\"text-align:right;\"> 0.7675 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Treynor Ratio </td>\n   <td style=\"text-align:right;\"> 0.0030 </td>\n   <td style=\"text-align:right;\"> 0.1292 </td>\n   <td style=\"text-align:right;\"> 0.0200 </td>\n   <td style=\"text-align:right;\"> 0.0535 </td>\n   <td style=\"text-align:right;\"> 0.0530 </td>\n   <td style=\"text-align:right;\"> 0.0830 </td>\n   <td style=\"text-align:right;\"> 0.1282 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n# Conclusion\n\nFrom the results above, the best performing portfolio is the ARW^[Adaptive Re-weighted estimator] follwed by the OGK^[Orthogonalized Gnanadesikan-Kettenring estimator] and COV-T^[Multivariate Student's t estimator]. The portfolios constructed using estimators from the Shrink, bagged and sample covariance matrix produce almost the same results. The MCD portfolio performed the worst among all the estimators, probably due to the incorrect assumption that the asset returns are multivariate normal distributed. The poor performance by MVE suggests that the assumption of elliptic distribution of asset returns was not met. The good performance delivered by ARW, OGK and COV-T suggest that the data contained heavy tailed returns, which were better handled using the three methods.\n\nIt is evident that the estimation methods which are suited to handling non-normal returns performed better as compared to those which make the assumption of normally distributed returns.\n\nAll portfolios out-performed the Equally Weighted (1/n) portfolio in the period under consideration. Based on the information ratio^[This relates the degree to which an investment has beaten the benchmark to the consistency with which the investment has beaten the benchmark.], the ARW portfolio outperformed the SAMPLE portfolio by the largest margin.\n\n# Recommendations\n\n1. Future analysis could include the NNV estimator, and other distribution estimators such as the NIG distribution.\n\n2. Future analysis could include estimators obtained after adjusting data for liquidity, and auto-correlation.\n\n\n# References\n\nMartin Maechler, Peter Rousseeuw, Christophe Croux, Valentin\n  Todorov, Andreas Ruckstuhl, Matias Salibian-Barrera, Tobias Verbeke,\n  Manuel Koller, c(\"Eduardo\", \"L. T.\") Conceicao and Maria Anna di\n  Palma (2024). robustbase: Basic Robust Statistics R package version\n  0.99-2. URL http://CRAN.R-project.org/package=robustbase\n  \nValentin Todorov, Peter Filzmoser (2009). An Object-Oriented\n  Framework for Robust Multivariate Analysis. Journal of Statistical\n  Software, 32(3), 1-47. URL\n  https://www.jstatsoft.org/article/view/v032i03/.\n\nWuertz D, Setz T, Chalabi Y, Boshnakov GN (2023). _fBasics: Rmetrics\n  - Markets and Basic Statistics_. R package version 4032.96,\n  <https://CRAN.R-project.org/package=fBasics>.\n  \nWuertz D, Setz T, Theussl S (2023). _fMultivar: Rmetrics - Modeling\n  of Multivariate Financial Return Distributions_. R package version\n  4031.84, <https://CRAN.R-project.org/package=fMultivar>.\n\n---\n\nGnanadesikan, R. and John R. Kettenring (1972) Robust estimates, residuals, and outlier detection with multiresponse data. Biometrics 28, 81--124.\n\nH. Markowitz. Portfolio Selection. The Journal of Finance, 7(1):77--91, 1952.\n\nH.M. Markowitz. Foundations of portfolio theory. Journal of Finance, pages 469--477, 1991.\n\nIrving Fisher. The Nature of Capital and Income. Macmillan, 1906.\n\nJ. Tobin. Liquidity preference as behavior towards risk. The Review of Economic Studies, pages 65--86, 1958.\n\nMaronna, R.A. and Zamar, R.H. (2002) Robust estimates of location and dispersion of high-dimensional datasets; Technometrics 44(4), 307--317.\n\nRousseeuw, P. & Van Driessen, K. (1999). A fast algorithm for the minimum covariance determinant estimator. Technometrics, 41, 212--223. 55, 279\n\nSharpe, W. F. (1994). The sharpe ratio. Journal of Portfolio Management, 21(1),\n49–58. 227\n\n# Session information\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsessionInfo()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nR version 4.3.2 (2023-10-31)\nPlatform: aarch64-apple-darwin20 (64-bit)\nRunning under: macOS Ventura 13.6.6\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/lib/libRblas.0.dylib \nLAPACK: /Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.11.0\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\ntime zone: Africa/Nairobi\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] quantmod_0.4.26            TTR_0.24.4                \n [3] tidyr_1.3.1                corrplot_0.92             \n [5] MASS_7.3-60                corpcor_1.6.10            \n [7] robustbase_0.99-2          fPortfolio_4023.84        \n [9] lubridate_1.9.3            kableExtra_1.4.0          \n[11] plotly_4.10.4              mvoutlier_2.1.1           \n[13] sgeostat_1.0-27            fAssets_4023.85           \n[15] fBasics_4032.96            timeSeries_4032.109       \n[17] timeDate_4032.109          PortfolioAnalytics_1.1.0  \n[19] PerformanceAnalytics_2.0.4 foreach_1.5.2             \n[21] ggpubr_0.6.0               xts_0.13.2                \n[23] zoo_1.8-12                 stringi_1.8.4             \n[25] tufte_0.13                 gghighlight_0.4.1         \n[27] gridExtra_2.3              purrr_1.0.2               \n[29] stringr_1.5.1              sf_1.0-16                 \n[31] ggplot2_3.5.1              dplyr_1.1.4               \n[33] pacman_0.5.1              \n\nloaded via a namespace (and not attached):\n [1] rstudioapi_0.16.0   jsonlite_1.8.8      magrittr_2.0.3     \n [4] farver_2.1.2        rmarkdown_2.27      Rglpk_0.6-5.1      \n [7] vctrs_0.6.5         RCurl_1.98-1.14     rstatix_0.7.2      \n[10] htmltools_0.5.8.1   energy_1.7-11       curl_5.2.1         \n[13] truncnorm_1.0-9     broom_1.0.5         cellranger_1.1.0   \n[16] KernSmooth_2.23-22  htmlwidgets_1.6.4   plyr_1.8.9         \n[19] ecodist_2.1.3       igraph_2.0.3        lifecycle_1.0.4    \n[22] iterators_1.0.14    pkgconfig_2.0.3     R6_2.5.1           \n[25] fastmap_1.2.0       digest_0.6.35       numDeriv_2016.8-1.1\n[28] colorspace_2.1-0    spatial_7.3-17      mvnormtest_0.1-9-3 \n[31] labeling_0.4.3      fansi_1.0.6         timechange_0.3.0   \n[34] httr_1.4.7          abind_1.4-5         compiler_4.3.2     \n[37] proxy_0.4-27        withr_3.0.0         gsl_2.1-8          \n[40] backports_1.5.0     ggcorrplot_0.1.4.1  carData_3.0-5      \n[43] DBI_1.2.2           highr_0.11          ggsignif_0.6.4     \n[46] classInt_0.4-10     tools_4.3.2         units_0.8-5        \n[49] glue_1.7.0          quadprog_1.5-8      grid_4.3.2         \n[52] reshape2_1.4.4      generics_0.1.3      gtable_0.3.5       \n[55] class_7.3-22        sn_2.1.1            data.table_1.15.4  \n[58] xml2_1.3.6          car_3.1-2           utf8_1.2.4         \n[61] pillar_1.9.0        lattice_0.22-6      tidyselect_1.2.1   \n[64] knitr_1.47          svglite_2.1.3       stats4_4.3.2       \n[67] xfun_0.45           DEoptimR_1.1-3      Rsolnp_1.16        \n[70] lazyeval_0.2.2      yaml_2.3.8          boot_1.3-30        \n[73] fCopulae_4022.85    evaluate_0.24.0     codetools_0.2-20   \n[76] kernlab_0.9-32      tibble_3.2.1        cli_3.6.2          \n[79] systemfonts_1.1.0   munsell_0.5.1       Rcpp_1.0.13        \n[82] readxl_1.4.3        fMultivar_4031.84   XML_3.99-0.16.1    \n[85] parallel_4.3.2      bitops_1.0-7        viridisLite_0.4.2  \n[88] mvtnorm_1.2-4       slam_0.1-52         scales_1.3.0       \n[91] rneos_0.4-0         e1071_1.7-14        rlang_1.1.4        \n[94] cowplot_1.1.3       mnormt_2.1.1       \n```\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../site_libs/kePrint-0.0.1/kePrint.js\"></script>\n<link href=\"../../site_libs/lightable-0.0.1/lightable.css\" rel=\"stylesheet\" />\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}